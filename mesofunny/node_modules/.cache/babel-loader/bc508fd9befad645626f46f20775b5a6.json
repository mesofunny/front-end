{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\almaz\\\\Desktop\\\\lambda\\\\lab_2\\\\front-end\\\\mesofunny\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\almaz\\\\Desktop\\\\lambda\\\\lab_2\\\\front-end\\\\mesofunny\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { Route } from 'react-router-dom';\nimport MenuBar from './components/MenuBar.js';\nimport \"./App.css\";\nimport Jokes from \"./components/Jokes.js\";\nimport JokeList from \"./components/JokeList.js\";\nimport Profile from './components/Profile';\nimport PublicFeed from './components/PublicFeed';\nimport LoginRegister from './components/LoginRegister'; // import NavBar from './components/NavBar';\n\nimport HomePage from './components/HomePage';\nimport Test from './components/Test';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        myJoke = _useState2[0],\n        setJokeList = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        update = _useState4[0],\n        setUpdate = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isUpdating = _useState6[0],\n        setIsUpdating = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(MenuBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Jokes, {\n    myJoke: myJoke,\n    setJokeList: setJokeList,\n    update: update,\n    isUpdating: isUpdating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(JokeList, {\n    myJoke: myJoke,\n    setUpdate: setUpdate,\n    setIsUpdating: setIsUpdating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \" }\", React.createElement(Route, {\n    path: \"/\",\n    component: NavBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/user\",\n    component: LoginRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/profile\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/public-feed\",\n    component: PublicFeed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/favorites\",\n    component: Favorites,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/friends\",\n    component: Friends,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Inbox\",\n    component: Inbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/new-jokes\",\n    component: NewJokes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/jokes\",\n    render: props => React.createElement(Jokes, Object.assign({}, props, {\n      myJoke: myJoke,\n      setJokeList: setJokeList,\n      update: update,\n      isUpdating: isUpdating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/jokes\",\n    render: props => React.createElement(JokeList, Object.assign({}, props, {\n      myJoke: myJoke,\n      setUpdate: setUpdate,\n      setIsUpdating: setIsUpdating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/test\",\n    component: Test,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\almaz\\Desktop\\lambda\\lab_2\\front-end\\mesofunny\\src\\App.js"],"names":["React","useState","Route","MenuBar","Jokes","JokeList","Profile","PublicFeed","LoginRegister","HomePage","Test","App","myJoke","setJokeList","update","setUpdate","isUpdating","setIsUpdating","NavBar","Favorites","Friends","Inbox","NewJokes","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport  MenuBar from './components/MenuBar.js'\r\nimport \"./App.css\";\r\nimport Jokes from \"./components/Jokes.js\";\r\nimport JokeList from \"./components/JokeList.js\";\r\nimport Profile from './components/Profile'\r\nimport PublicFeed from './components/PublicFeed'\r\n\r\nimport LoginRegister from './components/LoginRegister';\r\n// import NavBar from './components/NavBar';\r\nimport HomePage from './components/HomePage';\r\nimport Test from './components/Test';\r\n\r\nfunction App() {\r\n  const [myJoke, setJokeList] = useState([]);\r\n  const [update, setUpdate] = useState({});\r\n  const [isUpdating, setIsUpdating] = useState(false); \r\n\r\n  return (\r\n\r\n    <div>\r\n      <MenuBar />\r\n      <Jokes\r\n        myJoke={myJoke}\r\n        setJokeList={setJokeList}\r\n        update={update}\r\n        isUpdating={isUpdating}\r\n      />\r\n      <JokeList \r\n        myJoke={myJoke}\r\n        setUpdate={setUpdate}\r\n        setIsUpdating={setIsUpdating}\r\n      />\r\n      <Route exact path ='/' component={HomePage} />\r\n      <Route exact path=\"/\" component={HomePage} /> }\r\n      <Route path=\"/\" component={NavBar}/>\r\n      <Route path=\"/user\" component={LoginRegister} />\r\n      <Route  path='/profile' component={Profile} />\r\n      <Route  path='/public-feed' component={PublicFeed} />\r\n       <Route  path='/favorites' component={Favorites} />\r\n      <Route  path='/friends' component={Friends} />\r\n      <Route  path='/Inbox' component={Inbox} />\r\n      <Route  path='/new-jokes' component={NewJokes} />\r\n\r\n        \r\n        {<PrivateRoute \r\n          path=\"/jokes\"\r\n          render={props => <Jokes {...props} \r\n            myJoke={myJoke}\r\n            setJokeList={setJokeList}\r\n            update={update}\r\n            isUpdating={isUpdating} />\r\n        }\r\n        /> }\r\n        \r\n        <PrivateRoute \r\n          path=\"/jokes\"\r\n          render={props => <JokeList {...props} \r\n            myJoke={myJoke}\r\n            setUpdate={setUpdate}\r\n            setIsUpdating={setIsUpdating} />\r\n        }\r\n        />\r\n\r\n        <Route path=\"/test\" component={Test} />\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}