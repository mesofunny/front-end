{"ast":null,"code":"import axios from 'axios';\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\nexport const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\nexport const fetchData = () => dispatch => {\n  dispatch({\n    type: FETCH_DATA_START\n  });\n  axios.get(\"https://mesofunny.herokuapp.com/api/v1/jokes\").then(response => {\n    console.log(response);\n    dispatch({\n      type: FETCH_DATA_SUCCESS,\n      payload: response.data.jokes\n    });\n  }).catch(err => console.log(err.response));\n};\nexport const ADD_DATA_START = 'ADD_DATA_START';\nexport const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS';\nexport const ADD_DATA_FAILURE = 'ADD_DATA_FAILURE';\nexport const addData = newJoke => dispatch => {\n  dispatch({\n    type: ADD_DATA_START\n  });\n  axiosWithAuth().post(\"/api/v1/users/jokes\", newJoke).then(response => {\n    console.log(response);\n    dispatch({\n      type: ADD_DATA_SUCCESS,\n      payload: response.data\n    });\n  }).catch(err => console.log(err.response));\n};\nexport const DELETE_DATA_START = 'DELETE_DATA_START';\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS';\nexport const DELETE_DATA_FAILURE = 'DELETE_DATA_FAILURE';\nexport const deleteData = id => dispatch => {\n  dispatch({\n    type: ADD_DATA_START\n  });\n  axiosWithAuth().delete(\"/api/v1/users/jokes/\".concat(id), id).then(response => {\n    console.log(response);\n    dispatch({\n      type: ADD_DATA_SUCCESS,\n      payload: response.data\n    });\n  }).catch(err => console.log(err.response));\n};\nexport const EDIT_DATA_START = 'EDIT_DATA_START';\nexport const EDIT_DATA_SUCCESS = 'EDIT_DATA_SUCCESS';\nexport const EDIT_DATA_FAILURE = 'EDIT_DATA_FAILURE';\nexport const editData = (id, editJoke) => dispatch => {\n  dispatch({\n    type: EDIT_DATA_START\n  });\n  axiosWithAuth().put(\"/api/v1/users/jokes/\".concat(id), editJoke).then(response => {\n    console.log(response);\n    dispatch({\n      type: EDIT_DATA_SUCCESS,\n      payload: response.data\n    });\n  }).catch(err => console.log(err.response));\n};\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const userLogin = (email, password) => dispatch => {\n  console.log(email, password);\n  dispatch({\n    type: LOGIN_START\n  });\n  return axiosWithAuth().post(\"/api/v1/users/login\", {\n    email: email,\n    password: password\n  }).then(response => {\n    localStorage.setItem('token', response.data.token);\n    console.log(response.data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data\n    });\n    return true;\n  }).catch(res => {\n    console.log(res);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: res\n    });\n  });\n};\nexport const REGISTRATION_START = 'REGISTRATION_START';\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE';\nexport const register = newUser => dispatch => {\n  dispatch({\n    type: REGISTRATION_START\n  });\n  axiosWithAuth().post(\"/api/v1/users/register\", newUser).then(res => {\n    console.log(res);\n    localStorage.setItem('token', res.data.token);\n    dispatch({\n      type: REGISTRATION_SUCCESS,\n      payload: res.data\n    });\n    return true;\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: REGISTRATION_FAILURE,\n      payload: err.response\n    });\n  });\n};","map":{"version":3,"sources":["C:\\Users\\almaz\\Desktop\\lambda\\lab_2\\front-end\\mesofunny\\src\\store\\actions\\index.js"],"names":["axios","axiosWithAuth","FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","fetchData","dispatch","type","get","then","response","console","log","payload","data","jokes","catch","err","ADD_DATA_START","ADD_DATA_SUCCESS","ADD_DATA_FAILURE","addData","newJoke","post","DELETE_DATA_START","DELETE_DATA_SUCCESS","DELETE_DATA_FAILURE","deleteData","id","delete","EDIT_DATA_START","EDIT_DATA_SUCCESS","EDIT_DATA_FAILURE","editData","editJoke","put","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","userLogin","email","password","localStorage","setItem","token","res","REGISTRATION_START","REGISTRATION_SUCCESS","REGISTRATION_FAILURE","register","newUser"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth'\r\n\r\n\r\nexport const FETCH_DATA_START = 'FETCH_DATA_START'\r\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS'\r\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE'\r\n\r\n\r\nexport const fetchData = () => dispatch => {\r\n    dispatch({ type: FETCH_DATA_START})\r\n    axios\r\n        .get(`https://mesofunny.herokuapp.com/api/v1/jokes`)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({ type: FETCH_DATA_SUCCESS, payload: response.data.jokes})\r\n        })\r\n        .catch(err => console.log(err.response))\r\n    }\r\n\r\nexport const ADD_DATA_START = 'ADD_DATA_START'\r\nexport const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS'\r\nexport const ADD_DATA_FAILURE = 'ADD_DATA_FAILURE'\r\n\r\n\r\nexport const addData = (newJoke) => dispatch => {\r\n    dispatch({ type: ADD_DATA_START})\r\n    axiosWithAuth()\r\n        .post(`/api/v1/users/jokes`, newJoke)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({ type: ADD_DATA_SUCCESS, payload: response.data})\r\n        })\r\n        .catch(err => console.log(err.response))\r\n    }\r\n\r\nexport const DELETE_DATA_START = 'DELETE_DATA_START'\r\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS'\r\nexport const DELETE_DATA_FAILURE = 'DELETE_DATA_FAILURE'\r\n\r\n\r\nexport const deleteData = (id) => dispatch => {\r\n    dispatch({ type: ADD_DATA_START})\r\n    axiosWithAuth()\r\n        .delete(`/api/v1/users/jokes/${id}`, id)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({ type: ADD_DATA_SUCCESS, payload: response.data})\r\n        })\r\n        .catch(err => console.log(err.response))\r\n    }\r\n\r\nexport const EDIT_DATA_START = 'EDIT_DATA_START'\r\nexport const EDIT_DATA_SUCCESS = 'EDIT_DATA_SUCCESS'\r\nexport const EDIT_DATA_FAILURE = 'EDIT_DATA_FAILURE'\r\n\r\n\r\nexport const editData = (id, editJoke) => dispatch => {\r\n    dispatch({ type: EDIT_DATA_START})\r\n    axiosWithAuth()\r\n        .put(`/api/v1/users/jokes/${id}`, editJoke)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({ type: EDIT_DATA_SUCCESS, payload: response.data})\r\n        })\r\n        .catch(err => console.log(err.response))\r\n    }\r\n\r\nexport const LOGIN_START = 'LOGIN_START'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\n\r\n\r\nexport const userLogin = (email, password) => dispatch => {\r\n    console.log(email, password)\r\n    dispatch({ type: LOGIN_START })\r\n    return axiosWithAuth()\r\n        .post(`/api/v1/users/login`, {\r\n            email: email,\r\n            password: password\r\n        })\r\n        .then(response => {\r\n            localStorage.setItem('token', response.data.token)\r\n            console.log(response.data)\r\n            dispatch({ type: LOGIN_SUCCESS, payload: response.data })\r\n            return true\r\n        })\r\n        .catch(res => {\r\n            console.log(res)\r\n            dispatch({ type: LOGIN_FAILURE, payload: res})\r\n        })\r\n    }\r\n\r\nexport const REGISTRATION_START = 'REGISTRATION_START';\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\r\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE';\r\n\r\nexport const register = newUser => dispatch => {\r\n  dispatch({ type: REGISTRATION_START });\r\n  axiosWithAuth()\r\n    .post(`/api/v1/users/register`, newUser)\r\n    .then(res => {\r\n      console.log(res)\r\n      localStorage.setItem('token', res.data.token)\r\n      dispatch({ type: REGISTRATION_SUCCESS, payload: res.data });\r\n      return true;\r\n    })\r\n    .catch(err => {\r\n      console.log(err.response)\r\n      dispatch({ type: REGISTRATION_FAILURE, payload: err.response })\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}