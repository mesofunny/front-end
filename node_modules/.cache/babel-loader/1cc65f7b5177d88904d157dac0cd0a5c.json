{"ast":null,"code":"import axios from 'axios';\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\nexport const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\nexport const fetchData = () => dispatch => {\n  dispatch({\n    type: FETCH_DATA_START\n  });\n  axiosWithAuth().get(\"/api/v1/users/jokes\").then(response => {\n    console.log(response.data);\n    dispatch({\n      type: FETCH_DATA_SUCCESS,\n      payload: response.data.jokes\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: err\n    });\n  });\n};\nexport const ADD_DATA_START = 'ADD_DATA_START';\nexport const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS';\nexport const ADD_DATA_FAILURE = 'ADD_DATA_FAILURE';\nexport const addData = newJoke => dispatch => {\n  dispatch({\n    type: ADD_DATA_START\n  });\n  axiosWithAuth().post(\"/api/v1/users/jokes\", newJoke).then(response => {\n    console.log(response);\n    dispatch({\n      type: ADD_DATA_SUCCESS,\n      payload: response.data.jokes\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: err\n    });\n  });\n};\nexport const DELETE_DATA_START = 'DELETE_DATA_START';\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS';\nexport const DELETE_DATA_FAILURE = 'DELETE_DATA_FAILURE';\nexport const deleteData = id => dispatch => {\n  dispatch({\n    type: DELETE_DATA_START\n  });\n  axiosWithAuth().delete(\"/api/v1/users/jokes/\".concat(id)).then(response => {\n    console.log(response);\n    dispatch({\n      type: DELETE_DATA_SUCCESS,\n      payload: response.data.joke\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: err\n    });\n  });\n};\nexport const EDIT_DATA_START = 'EDIT_DATA_START';\nexport const EDIT_DATA_SUCCESS = 'EDIT_DATA_SUCCESS';\nexport const EDIT_DATA_FAILURE = 'EDIT_DATA_FAILURE';\nexport const editData = (id, editJoke) => dispatch => {\n  dispatch({\n    type: EDIT_DATA_START\n  });\n  axiosWithAuth().put(\"/api/v1/users/jokes/\".concat(id), editJoke).then(response => {\n    console.log(response);\n    dispatch({\n      type: EDIT_DATA_SUCCESS,\n      payload: response.data.jokes\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: err\n    });\n  });\n};\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const userLogin = (email, password) => dispatch => {\n  console.log(email, password);\n  dispatch({\n    type: LOGIN_START\n  });\n  return axiosWithAuth().post(\"/api/v1/users/login\", {\n    email: email,\n    password: password\n  }).then(response => {\n    localStorage.setItem('token', response.data.token);\n    console.log(response.data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data\n    });\n    return true;\n  }).catch(res => {\n    console.log(res);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: res\n    });\n  });\n};\nexport const REGISTRATION_START = 'REGISTRATION_START';\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE';\nexport const register = newUser => dispatch => {\n  dispatch({\n    type: REGISTRATION_START\n  });\n  axiosWithAuth().post(\"/api/v1/users/register\", newUser).then(res => {\n    console.log(res);\n    localStorage.setItem('token', res.data.token);\n    dispatch({\n      type: REGISTRATION_SUCCESS,\n      payload: res.data\n    });\n    return true;\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: REGISTRATION_FAILURE,\n      payload: err.response\n    });\n  });\n};","map":{"version":3,"sources":["/Users/yakuanadavis/Desktop/LambdaP/front-end/src/store/actions/index.js"],"names":["axios","axiosWithAuth","FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","fetchData","dispatch","type","get","then","response","console","log","data","payload","jokes","catch","err","LOGIN_FAILURE","ADD_DATA_START","ADD_DATA_SUCCESS","ADD_DATA_FAILURE","addData","newJoke","post","DELETE_DATA_START","DELETE_DATA_SUCCESS","DELETE_DATA_FAILURE","deleteData","id","delete","joke","EDIT_DATA_START","EDIT_DATA_SUCCESS","EDIT_DATA_FAILURE","editData","editJoke","put","LOGIN_START","LOGIN_SUCCESS","userLogin","email","password","localStorage","setItem","token","res","REGISTRATION_START","REGISTRATION_SUCCESS","REGISTRATION_FAILURE","register","newUser"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { axiosWithAuth } from '../../utils/axiosWithAuth'\n\n\nexport const FETCH_DATA_START = 'FETCH_DATA_START'\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS'\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE'\n\n\nexport const fetchData = () => dispatch => {\n    dispatch({ type: FETCH_DATA_START})\n    axiosWithAuth()\n        .get(`/api/v1/users/jokes`)\n        .then(response => {\n            console.log(response.data)\n            dispatch({ type: FETCH_DATA_SUCCESS, payload: response.data.jokes})\n        })\n        .catch(err => {\n            console.log(err.response)\n            dispatch({ type: LOGIN_FAILURE, payload: err})}\n            )\n    }\n\nexport const ADD_DATA_START = 'ADD_DATA_START'\nexport const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS'\nexport const ADD_DATA_FAILURE = 'ADD_DATA_FAILURE'\n\n\nexport const addData = (newJoke) => dispatch => {\n    dispatch({ type: ADD_DATA_START})\n    axiosWithAuth()\n        .post(`/api/v1/users/jokes`, newJoke)\n        .then(response => {\n            console.log(response)\n            dispatch({ type: ADD_DATA_SUCCESS, payload: response.data.jokes})\n        })\n        .catch(err => {\n            console.log(err.response)\n            dispatch({ type: LOGIN_FAILURE, payload: err})\n        })\n    }\n\nexport const DELETE_DATA_START = 'DELETE_DATA_START'\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS'\nexport const DELETE_DATA_FAILURE = 'DELETE_DATA_FAILURE'\n\n\nexport const deleteData = (id) => dispatch => {\n    dispatch({ type: DELETE_DATA_START})\n    axiosWithAuth()\n        .delete(`/api/v1/users/jokes/${id}`)\n        .then(response => {\n            console.log(response)\n            dispatch({ type: DELETE_DATA_SUCCESS, payload: response.data.joke})\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch({ type: LOGIN_FAILURE, payload: err})\n        })\n    }\n\nexport const EDIT_DATA_START = 'EDIT_DATA_START'\nexport const EDIT_DATA_SUCCESS = 'EDIT_DATA_SUCCESS'\nexport const EDIT_DATA_FAILURE = 'EDIT_DATA_FAILURE'\n\n\nexport const editData = (id, editJoke) => dispatch => {\n    dispatch({ type: EDIT_DATA_START})\n    axiosWithAuth()\n        .put(`/api/v1/users/jokes/${id}`, editJoke)\n        .then(response => {\n            console.log(response)\n            dispatch({ type: EDIT_DATA_SUCCESS, payload: response.data.jokes})\n        })\n        .catch(err => {\n            console.log(err.response)\n            dispatch({ type: LOGIN_FAILURE, payload: err})})\n    }\n\nexport const LOGIN_START = 'LOGIN_START'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\n\n\nexport const userLogin = (email, password) => dispatch => {\n    console.log(email, password)\n    dispatch({ type: LOGIN_START })\n    return axiosWithAuth()\n        .post(`/api/v1/users/login`, {\n            email: email,\n            password: password\n        })\n        .then(response => {\n            localStorage.setItem('token', response.data.token)\n            console.log(response.data)\n            dispatch({ type: LOGIN_SUCCESS, payload: response.data })\n            return true\n        })\n        .catch(res => {\n            console.log(res)\n            dispatch({ type: LOGIN_FAILURE, payload: res})\n        })\n    }\n\nexport const REGISTRATION_START = 'REGISTRATION_START';\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE';\n\nexport const register = newUser => dispatch => {\n  dispatch({ type: REGISTRATION_START });\n  axiosWithAuth()\n    .post(`/api/v1/users/register`, newUser)\n    .then(res => {\n      console.log(res)\n      localStorage.setItem('token', res.data.token)\n      dispatch({ type: REGISTRATION_SUCCESS, payload: res.data });\n      return true;\n    })\n    .catch(err => {\n      console.log(err.response)\n      dispatch({ type: REGISTRATION_FAILURE, payload: err.response })\n    });\n};"]},"metadata":{},"sourceType":"module"}