{"ast":null,"code":"import _objectSpread from \"/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/src/components/Jokes.jsx\";\nimport React, { useState, useEffect } from \"react\"; //Id Generator\n\nlet idGenerator = () => {\n  let id = 0;\n  return function countUp() {\n    return id++;\n  };\n};\n\nconst giveId = idGenerator();\nexport default function Jokes(props) {\n  const _useState = useState({\n    name: \"\",\n    description: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        jokeState = _useState2[0],\n        setJokeState = _useState2[1];\n\n  useEffect(() => {\n    setJokeState(props.update);\n  }, [props.update]);\n\n  const changeHandler = event => {\n    setJokeState(_objectSpread({}, jokeState, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!props.isUpdating) {\n      props.setJokeList([...props.myJoke, _objectSpread({}, jokeState, {\n        id: giveId()\n      })]);\n    } else if (props.isUpdating) {\n      //spreadOp\n      let updatedList = props.myJoke.filter(joke => joke.id !== jokeState.id);\n      let updatedListTwo = [...updatedList, jokeState];\n      props.setJokeList(updatedListTwo);\n    }\n\n    setJokeState({\n      name: \"\",\n      description: \"\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    name: \"name\",\n    value: jokeState.name,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"ENTER JOKE HERE\",\n    name: \"description\",\n    value: jokeState.description,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.isUpdating ? \"Update your Joke\" : \"Add your own fun!\")));\n}","map":{"version":3,"sources":["/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/src/components/Jokes.jsx"],"names":["React","useState","useEffect","idGenerator","id","countUp","giveId","Jokes","props","name","description","jokeState","setJokeState","update","changeHandler","event","target","value","submitHandler","preventDefault","isUpdating","setJokeList","myJoke","updatedList","filter","joke","updatedListTwo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,IAAIC,WAAW,GAAG,MAAM;AACtB,MAAIC,EAAE,GAAG,CAAT;AACA,SAAO,SAASC,OAAT,GAAmB;AACxB,WAAOD,EAAE,EAAT;AACD,GAFD;AAGD,CALD;;AAOA,MAAME,MAAM,GAAGH,WAAW,EAA1B;AAEA,eAAe,SAASI,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBACDP,QAAQ,CAAC;AACzCQ,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,WAAW,EAAE;AAF4B,GAAD,CADP;AAAA;AAAA,QAC5BC,SAD4B;AAAA,QACjBC,YADiB;;AAMnCV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACJ,KAAK,CAACK,MAAP,CAAZ;AACD,GAFQ,EAEN,CAACL,KAAK,CAACK,MAAP,CAFM,CAAT;;AAIA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7BH,IAAAA,YAAY,mBACPD,SADO;AAEV,OAACI,KAAK,CAACC,MAAN,CAAaP,IAAd,GAAqBM,KAAK,CAACC,MAAN,CAAaC;AAFxB,OAAZ;AAID,GALD;;AAOA,QAAMC,aAAa,GAAGH,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAI,CAACX,KAAK,CAACY,UAAX,EAAuB;AACrBZ,MAAAA,KAAK,CAACa,WAAN,CAAkB,CAAC,GAAGb,KAAK,CAACc,MAAV,oBAAuBX,SAAvB;AAAkCP,QAAAA,EAAE,EAAEE,MAAM;AAA5C,SAAlB;AACD,KAFD,MAEO,IAAIE,KAAK,CAACY,UAAV,EAAsB;AAC3B;AACA,UAAIG,WAAW,GAAGf,KAAK,CAACc,MAAN,CAAaE,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACrB,EAAL,KAAYO,SAAS,CAACP,EAAlD,CAAlB;AACA,UAAIsB,cAAc,GAAG,CAAC,GAAGH,WAAJ,EAAiBZ,SAAjB,CAArB;AACAH,MAAAA,KAAK,CAACa,WAAN,CAAkBK,cAAlB;AACD;;AAEDd,IAAAA,YAAY,CAAC;AAAEH,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,WAAW,EAAE;AAAzB,KAAD,CAAZ;AACD,GAZD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEQ,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEP,SAAS,CAACF,IAJnB;AAKE,IAAA,QAAQ,EAAEK,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,KAAK,EAAEH,SAAS,CAACD,WAJnB;AAKE,IAAA,QAAQ,EAAEI,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACY,UAAN,GAAmB,kBAAnB,GAAwC,mBAD3C,CAfF,CADF,CADF;AAuBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//Id Generator\nlet idGenerator = () => {\n  let id = 0;\n  return function countUp() {\n    return id++;\n  };\n};\n\nconst giveId = idGenerator();\n\nexport default function Jokes(props) {\n  const [jokeState, setJokeState] = useState({\n    name: \"\",\n    description: \"\"\n  });\n\n  useEffect(() => {\n    setJokeState(props.update);\n  }, [props.update]);\n\n  const changeHandler = event => {\n    setJokeState({\n      ...jokeState,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (!props.isUpdating) {\n      props.setJokeList([...props.myJoke, { ...jokeState, id: giveId() }]);\n    } else if (props.isUpdating) {\n      //spreadOp\n      let updatedList = props.myJoke.filter(joke => joke.id !== jokeState.id);\n      let updatedListTwo = [...updatedList, jokeState];\n      props.setJokeList(updatedListTwo);\n    }\n\n    setJokeState({ name: \"\", description: \"\" });\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          name=\"name\"\n          value={jokeState.name}\n          onChange={changeHandler}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"ENTER JOKE HERE\"\n          name=\"description\"\n          value={jokeState.description}\n          onChange={changeHandler}\n        />\n        <button>\n          {props.isUpdating ? \"Update your Joke\" : \"Add your own fun!\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}