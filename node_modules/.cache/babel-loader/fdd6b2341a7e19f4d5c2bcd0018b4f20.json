{"ast":null,"code":"import _objectSpread from \"/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/src/components/Test.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData, addData, deleteData } from '../store/actions';\n\nconst Test = props => {\n  const _useState = useState({\n    form: {\n      title: '',\n      joke: '',\n      status: ''\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1]; // const [state, setState] = useState([props.jokes])\n\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    props.history.push('/');\n  };\n\n  useEffect(() => {\n    props.fetchData();\n  }, []);\n\n  const addJoke = e => {\n    e.preventDefault();\n    props.addData(input.form);\n    setInput({\n      form: {\n        title: '',\n        joke: '',\n        status: ''\n      }\n    });\n  };\n\n  const handleChanges = e => {\n    setInput({\n      form: _objectSpread({}, input.form, {\n        [e.target.name]: e.target.value\n      })\n    });\n  };\n\n  console.log(props.jokes);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"test me\"), props.jokes ? props.jokes.map((joke, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, joke.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, joke.joke), console.log(joke.id), React.createElement(\"button\", {\n      onClick: () => props.deleteData(joke.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Delete\"));\n  }) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Loading...\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: input.form.title,\n    placeholder: \"title\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"joke\",\n    value: input.form.joke,\n    placeholder: \"joke\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"status\",\n    value: input.form.status,\n    placeholder: \"public or private\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addJoke,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Add\")), React.createElement(\"button\", {\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Logout\"));\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    error: state.error,\n    isFetching: state.isFetching,\n    jokes: state.jokes,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData,\n  addData,\n  deleteData\n})(Test);","map":{"version":3,"sources":["/Users/yakuanadavis/Desktop/LambdaP/front-end/mesofunny/src/components/Test.js"],"names":["React","useEffect","useState","connect","fetchData","addData","deleteData","Test","props","form","title","joke","status","input","setInput","logout","localStorage","removeItem","history","push","addJoke","e","preventDefault","handleChanges","target","name","value","console","log","jokes","map","i","id","mapStateToProps","state","error","isFetching","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchData, addData, deleteData } from '../store/actions'\n\nconst Test = (props) => {\n    const [input, setInput] = useState({\n        form: {\n            title: '',\n            joke: '',\n            status: ''\n        }\n    })\n\n    // const [state, setState] = useState([props.jokes])\n    \n    const logout = () => {\n        localStorage.removeItem('token')\n        props.history.push('/')\n    }\n\n    useEffect(() => {\n        props.fetchData()\n    }, [])\n\n    const addJoke = (e) => {\n        e.preventDefault()\n        props.addData(input.form)\n        setInput({\n            form: {\n                title: '',\n                joke: '',\n                status: ''\n            }\n        })\n    }\n\n    const handleChanges = e => {\n    setInput({\n      form: {\n        ...input.form,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n    console.log(props.jokes)\n    return ( \n        <div>\n            <p>test me</p>\n            {props.jokes ? props.jokes.map((joke,i) => {\n                return <div key={i}>\n                    <p>{joke.title}</p>\n                    <p>{joke.joke}</p>\n                    {console.log(joke.id)}\n                    <button onClick={() => props.deleteData(joke.id)}>Delete</button>\n                </div>\n            }) : <p>Loading...</p>}\n            <form>\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    value={input.form.title}\n                    placeholder=\"title\"\n                    onChange={handleChanges}\n                />\n                <input\n                    type=\"text\"\n                    name=\"joke\"\n                    value={input.form.joke}\n                    placeholder=\"joke\"\n                    onChange={handleChanges}\n                />\n                <input\n                    type=\"text\"\n                    name=\"status\"\n                    value={input.form.status}\n                    placeholder=\"public or private\"\n                    onChange={handleChanges}\n                />\n            <button onClick={addJoke}>Add</button>\n            </form>\n            <button onClick={logout}>Logout</button>\n        </div>\n     );\n}\n\n\n \nconst mapStateToProps = state => {\n    console.log(state)\n    return {\n        error: state.error,\n        isFetching: state.isFetching,\n        jokes: state.jokes,\n        user: state.user\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { fetchData, addData, deleteData }\n)(Test)"]},"metadata":{},"sourceType":"module"}